{"ast":null,"code":"import React, { useContext, useEffect, useState } from 'react';\nimport { auth as firebaseAuth } from './firebase';\nexport const AuthContext = React.createContext({\n  loggedIn: false\n});\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function useAuthInit() {\n  const [authInit, setAuthInit] = useState({\n    loading: true,\n    loggedIn: false\n  });\n  useEffect(() => {\n    firebaseAuth.onAuthStateChanged(user => {\n      setAuthInit({\n        loading: false,\n        loggedIn: Boolean(user)\n      });\n    });\n  }, []);\n  return authInit;\n}","map":{"version":3,"sources":["/Users/zeta/Documents/XXX/Languages/ionic/daily-moments/src/auth.ts"],"names":["React","useContext","useEffect","useState","auth","firebaseAuth","AuthContext","createContext","loggedIn","useAuth","useAuthInit","authInit","setAuthInit","loading","onAuthStateChanged","user","Boolean"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,IAAI,IAAIC,YAAhB,QAAmC,YAAnC;AAWA,OAAO,MAAMC,WAAW,GAAGN,KAAK,CAACO,aAAN,CAA0B;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAA1B,CAApB;AAEP,OAAO,SAASC,OAAT,GAAyB;AAC9B,SAAOR,UAAU,CAACK,WAAD,CAAjB;AACD;AAGD,OAAO,SAASI,WAAT,GAAgC;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAW;AAACU,IAAAA,OAAO,EAAE,IAAV;AAAgBL,IAAAA,QAAQ,EAAE;AAA1B,GAAX,CAAxC;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,YAAY,CAACS,kBAAb,CAAiCC,IAAD,IAAU;AACxCH,MAAAA,WAAW,CAAC;AAACC,QAAAA,OAAO,EAAE,KAAV;AAAiBL,QAAAA,QAAQ,EAAEQ,OAAO,CAACD,IAAD;AAAlC,OAAD,CAAX;AACD,KAFD;AAGD,GAJQ,EAIP,EAJO,CAAT;AAKA,SAAOJ,QAAP;AACD","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {auth as firebaseAuth} from './firebase';\n\ninterface Auth {\n  loggedIn: boolean;\n}\n\ninterface AuthInit {\n  loggedIn: boolean;\n  loading: boolean;\n}\n\nexport const AuthContext = React.createContext<Auth>({loggedIn: false});\n\nexport function useAuth(): Auth {\n  return useContext(AuthContext);\n}\n\n\nexport function useAuthInit(): AuthInit{\n  const [authInit, setAuthInit] = useState<AuthInit>({loading: true, loggedIn: false});\n  useEffect(() => {\n    firebaseAuth.onAuthStateChanged((user) => {\n      setAuthInit({loading: false, loggedIn: Boolean(user)});\n    })\n  },[]);\n  return authInit;\n}\n"]},"metadata":{},"sourceType":"module"}