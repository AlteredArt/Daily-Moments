{"ast":null,"code":"import _slicedToArray from\"/Users/zeta/Documents/XXX/Languages/ionic/daily-moments/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useState}from'react';import{auth as firebaseAuth}from'./firebase';export var AuthContext=React.createContext({loggedIn:false});export function useAuth(){return useContext(AuthContext);}export function useAuthInit(){var _useState=useState({loading:true}),_useState2=_slicedToArray(_useState,2),authInit=_useState2[0],setAuthInit=_useState2[1];useEffect(function(){return firebaseAuth.onAuthStateChanged(function(firebaseUser){var auth=firebaseUser?{loggedIn:true,userId:firebaseUser.uid}:{loggedIn:false};setAuthInit({loading:false,auth:auth});});},[]);return authInit;}","map":{"version":3,"sources":["/Users/zeta/Documents/XXX/Languages/ionic/daily-moments/src/auth.ts"],"names":["React","useContext","useEffect","useState","auth","firebaseAuth","AuthContext","createContext","loggedIn","useAuth","useAuthInit","loading","authInit","setAuthInit","onAuthStateChanged","firebaseUser","userId","uid"],"mappings":"8KAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,CAA2BC,SAA3B,CAAsCC,QAAtC,KAAqD,OAArD,CACA,OAAQC,IAAI,GAAIC,CAAAA,YAAhB,KAAmC,YAAnC,CAYA,MAAO,IAAMC,CAAAA,WAAW,CAAGN,KAAK,CAACO,aAAN,CAA0B,CAACC,QAAQ,CAAE,KAAX,CAA1B,CAApB,CAEP,MAAO,SAASC,CAAAA,OAAT,EAAyB,CAC9B,MAAOR,CAAAA,UAAU,CAACK,WAAD,CAAjB,CACD,CAGD,MAAO,SAASI,CAAAA,WAAT,EAAgC,eACLP,QAAQ,CAAW,CAACQ,OAAO,CAAE,IAAV,CAAX,CADH,wCAC9BC,QAD8B,eACpBC,WADoB,eAErCX,SAAS,CAAC,UAAM,CACd,MAAOG,CAAAA,YAAY,CAACS,kBAAb,CAAgC,SAACC,YAAD,CAAkB,CACvD,GAAMX,CAAAA,IAAI,CAAGW,YAAY,CACzB,CAACP,QAAQ,CAAE,IAAX,CAAiBQ,MAAM,CAAED,YAAY,CAACE,GAAtC,CADyB,CAEzB,CAACT,QAAQ,CAAE,KAAX,CAFA,CAGAK,WAAW,CAAC,CAACF,OAAO,CAAE,KAAV,CAAiBP,IAAI,CAAJA,IAAjB,CAAD,CAAX,CACD,CALM,CAAP,CAMD,CAPQ,CAOP,EAPO,CAAT,CAQA,MAAOQ,CAAAA,QAAP,CACD","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {auth as firebaseAuth} from './firebase';\n\ninterface Auth {\n  loggedIn: boolean;\n  userId?: string;\n}\n\ninterface AuthInit {\n  loading: boolean;\n  auth?: Auth;\n}\n\nexport const AuthContext = React.createContext<Auth>({loggedIn: false});\n\nexport function useAuth(): Auth {\n  return useContext(AuthContext);\n}\n\n\nexport function useAuthInit(): AuthInit{\n  const [authInit, setAuthInit] = useState<AuthInit>({loading: true});\n  useEffect(() => {\n    return firebaseAuth.onAuthStateChanged((firebaseUser) => {\n      const auth = firebaseUser ?\n      {loggedIn: true, userId: firebaseUser.uid} :\n      {loggedIn: false};\n      setAuthInit({loading: false, auth});\n    });\n  },[]);\n  return authInit;\n}\n"]},"metadata":{},"sourceType":"module"}